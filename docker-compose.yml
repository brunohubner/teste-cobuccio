services:
  cobuccio-api:
    build:
      context: .
      dockerfile: nestjs.dockerfile
    container_name: cobuccio-api:latest
    # restart: always
    ports:
      - $SERVER_PORT:$SERVER_PORT
    env_file:
      - .env


  cobuccio-postgres:
    image: postgres:17.3-alpine3.21
    container_name: cobuccio-postgres
    # restart: always
    ports:
      - $DB_PORT:5432
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - PGDATA=/var/lib/postgresql/data
      - TZ=America/Sao_Paulo
    volumes:
      - ./.postgres-data:/var/lib/postgresql/data
    networks:
      - cobuccio-network

  cobuccio-redis:
    image: redis:7.4.2-alpine3.21
    container_name: cobuccio-redis
    # restart: always
    ports:
      - $REDIS_PORT:6379
    command: redis-server --requirepass ${REDIS_PASS}
    networks:
      - cobuccio-network


  cobuccio-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    container_name: cobuccio-elasticsearch
    # restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.monitoring.collection.enabled=true
      - action.destructive_requires_name=true
      - indices.breaker.request.limit=50%
      - thread_pool.write.queue_size=1000
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - cobuccio_elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - $ELASTIC_PORT:9200
      - "9300:9300"
    networks:
      - cobuccio-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.2
    container_name: cobuccio-kibana
    # restart: always
    depends_on:
      - cobuccio-elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://cobuccio-elasticsearch:$ELASTIC_PORT
    ports:
      - $KIBANA_PORT:5601
    networks:
      - cobuccio-network
    ulimits:
      memlock:
        soft: -1
        hard: -1


  cobuccio-nginx:
    image: nginx:1.27.4-alpine3.21
    container_name: cobuccio-nginx
    # restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - cobuccio-network

  cobuccio-certbot:
    image: certbot/certbot
    container_name: cobuccio-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew --webroot -w /var/www/certbot --quiet; done'"

volumes:
  cobuccio_elasticsearch_data:
    driver: local
  cobuccio_kibana_data:
    driver: local

networks:
  cobuccio-network:
    driver: bridge
